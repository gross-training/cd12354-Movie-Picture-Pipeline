name: Frontend Continuous Deployment

on:
  push:
    branches: main
    paths: 'starter/frontend/**'

  workflow_dispatch:

defaults:
  run:
    working-directory: ./starter/frontend

env:
  NODE_VER: '18.14'
  REACT_APP_MOVIE_API_URL: 'http://aaaab6406209240f5aaaf27a39766501-1380764422.us-east-1.elb.amazonaws.com'
  CLUSTER_NAME: cluster

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code from the repository. 
      uses: actions/checkout@v3

    - name: Set up a Node.js environment using the specified node version 
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VER }}

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-npm-cache-

    - name: Install the dependencies.
      run: npm ci

    - name: Run the linter.
      run: npm run lint

    - name: Run the tests
      run: npm test  

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEYID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Image to ECR
      run :   |
         docker build --build-arg=REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL -t mp-frontend:latest .
         docker tag mp-frontend:latest 313910775882.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
         docker push 313910775882.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}

    - name: Update kubeconfig
      run:  | 
         echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
         aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
      
    - name: Deploy to K8s
      run :   |
          cd k8s
          kustomize edit set image frontend=${{ secrets.ECR_REG_NAME }}/frontend:${GITHUB_SHA}
          kustomize build|kubectl apply -k .
    
    - name: Gather K8 info
      run :   |
          kubectl get pods -A
          kubectl get svc -A
          kubectl describe pods -A

    
