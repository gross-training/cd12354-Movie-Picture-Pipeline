name: Backend Continuous Integration

on:
  pull_request:
    branches: main
    paths: 'starter/frontend/**'

  workflow_dispatch:

defaults:
  run:
    working-directory: ./starter/backend

env:
  PYTHON_VER: '3.10.6'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code from the repository. 
      uses: actions/checkout@v3

    - name: Set up a python environment using the specified version 
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VER }}

    - name: Install pipenv
      run: pip install pipenv
       
    - name: Cache Pipenv
      uses: actions/cache@v3
      with:
        path: |
          ~/.pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pipenv install --dev

    - name: Run the linter.
      run: FAIL_LINT=true pipenv run lint

  
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out the code from the repository. 
      uses: actions/checkout@v4

    - name: Set up a python environment using the specified version
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VER }}
    
    - name: Install pipenv
      run:  pip install pipenv

    - name: Cache Pipenv
      uses: actions/cache@v3
      with:
        path: |
          ~/.pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pipenv install --dev

    - name: Run the tests
      run: pipenv run test
  
  build:
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code from the repository. 
      uses: actions/checkout@v4

    - name:  Build Docker Image --tag mp-backend:latest .
      run:  docker build --tag mp-backend:latest .
      
    - name: Check image is created
      run: docker images|grep mp-backend
  
    - name: Run the image
      run:  docker run -p 5000:5000 --name mp-backend -d mp-backend
 
    - name:  Check the running application
      run:  curl http://localhost:5000/movies

    - name:  Review Logs
      run: docker logs mp-backend

    - name: Set up a python environment using the specified version
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VER }}

    - name: Install pipenv
      run: pip install pipenv

    - name: Cache Pipenv
      uses: actions/cache@v3
      with:
        path: |
          ~/.local/share/virtualenvs
          ~/.pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pipenv install --dev

    - name: Run the tests
      run: pipenv run test

    
